# To create a class ...

class Drug:
    
    def __init__(self, name, aisle, side, column, row, medical_uses, forms):
        
        self.name = name
        self.aisle = aisle
        self.side = side
        self.column = column
        self.row = row
        self.medical_uses = medical_uses
        self.forms = forms
        
    def get_name(self):
        
        return self.name
    
    def get_aisle(self):
        
        return self.aisle
    
    def get_side(self):
        
        return self.side
    
    def get_column(self):
        
        return self.column
    
    def get_row(self):
        
        return self.row 
    
    def get_medical_uses(self):
        
        return self.medical_uses
    
    def get_forms(self):
        
        return self.forms


# The drugs ...

Advair_Diskus = Drug("Advair Diskus", 1, "left", 1, 1, 
 "Prevent asthma attacks, flare-ups, or worsening COPD associated with emphysema and/ or chronic bronchitis", 
 "Advair 100 Diskus, Advair 250 Diskus, and Advair 500 Diskus")

Flovent_HFA = Drug("Flovent HFA", 1, "left", 1, 2, "Prevent asthma attacks", 
"Flovent HFA 44 mcg, Flovent HFA 110 mcg, and Flovent HFA 220 mcg")

Symbicort = Drug("Symbicort", 1, "left", 1, 3, "Prevent bronchospasm in people with asthma or COPD",
"Inhalation aerosol in strengths of either 80/4.5 or 160/4.5")

Spiriva_Handihaler = Drug("Spiriva Handihaler", 1, "left", 1, 4, "Treat symptoms of COPD, including bronchitis and emphysema", "Capsules"),

Benicar = Drug("Benicar", 1, "left", 2, 1, "Treat hypertension (high blood pressure) in adults and children who are at least six years old", "Tablets of 5 mg, 20 mg, and 40 mg"),

Diovan = Drug("Diovan", 1, "left", 2, 2, "Treat hypertension (high blood pressure) in adults and children who are at least six years old. Treat heart failure in adults",
"Tablets of 40 mg, 80 mg, 160 mg, and 320 mg")

Epogen = Drug("Epogen", 1, "left", 2, 3, "Treat anemia caused by chemotherapy, chronic kidney disease, or by taking zidovudine to treat HIV. Reduce the need for red blood cell transfusions in patients having certain types of surgery",
"Multidose vials of 2000 Units/ mL, 3000 Units/ mL, 4000 Units/ mL, 10000 Units/ mL, 20000 Units/ mL, and 40000 Units/ mL")

Neulasta = Drug("Neulasta", 1, "left", 2, 4, "Prevent neutropenia (lack of certain white blood cells due to receiving chemotherapy)", "0.6 mL single-use syringe")

Neupogen = Drug("Neupogen", 1, "left", 3, 1, "Treat neutropenia (lack of certain white blood cells caused by cancer, bone marrow transplant, receiving chemotherapy, or by other conditions)",
"Single use preservative-free vials of 1 mL and 1.6 mL")

Procrit = Drug("Procrit", 1, "left", 3, 2, "Treat anemia caused by chronic kidney disease, chemotherapy, or by taking zidovudine to treat HIV. Reduce the need for red blood cell transfusions in patients having certain types of surgery",
"Single-dose vials of 2000, 3000, 4000, 10,000, and 40,000 Units/ mL. Multi-dose vials of 10,000 Units/2 mL and 20,000 Units/ mL")

Pradaxa = Drug("Pradaxa", 1, "left", 3, 3, "Reduce the risk of stroke and blood clots in people who have atrial fibrillation", "Capsules of 75 mg, 110 mg, and 150 mg")

Xarelto = Drug("Xarelto", 1, "left", 3, 4, "Prevent/ treat DVT which can lead to blood clots in the lungs Lower the risk of stroke caused by a blood clot in people with atrial fibrillation",
"Tablets of 10 mg, 15 mg, and 20 mg")

Abilify = Drug("Abilify", 1, "right", 1, 1, "Treat the symptoms of psychotic conditions like schizophrenia and bipolar I disorder", "Tablets of 2 mg, 5 mg, 10 mg, 15 mg, 20 mg, and 30 mg")

Cymbalta = Drug("Cymbalta", 1, "right", 1, 2, 
"Treat major depressive disorder in adults. Treat general anxiety disorder in adults and children who are at least seven years old. Treat fibromyalgia, chronic muscle or joint pain, and pain caused by nerve damage in adults with diabetes",
"Capsules of 30 mg and 60 mg")

Invega_Sustenna = Drug("Invega Sustenna", 1, "right", 1, 3, "Treat schizophrenia or schizoaffective disorder", 
"Suspensions for injection of 25 mg, 50 mg, 75 mg, 100 mg, and 150 mg")

Lunesta = Drug("Lunesta", 1, "right", 1, 4, "Treat insomnia", "Tablets of 1 mg, 2 mg, and 3 mg")

Lyrica = Drug("Lyrica", 1, "right", 2, 1,
"Control seizures and treat fibromyalgia, pain caused by nerve damage in people with diabetes, and post-herpetic neuralgia or neuropathic pain associated with spinal cord injury", "Capsules of 25 mg, 50 mg, 75 mg, 100 mg, 150 mg, 200 mg, 225 mg, and 300 mg")

Namenda = Drug("Namenda", 1, "right", 2, 2, "Treat moderate to severe dementia of the Alzheimer's type",
"Liquid solution with adjustable syringe")

Seroquel_XR = Drug("Seroquel XR", 1, "right", 2, 3,
"Treat schizophrenia in adults and children who are at least thirteen years old. Treat bipolar disorder in adults and children who are at least ten years old. Help treat major depressive disorder in adults",
"Tablets of 50 mg, 150 mg, 200 mg, 300 mg, and 400 mg")

Vyvanse = Drug("Vyvanse", 1, "right", 2, 4,
"Treat ADHD in adults and children who are at least six years old. Treat moderate to severe binge eating disorder in adults",
"Capsules of 10 mg, 20 mg, 30 mg, 40 mg, 50 mg, 60 mg, and 70 mg")

Enbrel = Drug("Enbrel", 1, "right", 3, 1,
"Treat rheumatoid arthritis, psoriatic arthritis, or ankylosing spondylitis, and to prevent joint damage caused by these conditions. Treat polyarticular juvenile idiopathic arthritis in children who are at least two years old. Treat plaque psoriasis in adults and children who are at least four years old",
"Multiple-use vials of 1 mL, and single-use pre-filled syringes of 50 mg/ mL")

Remicade = Drug("Remicade", 1, "right", 3, 2, "Treat  arthritis (rheumatoid and psoriatic), ulcerative colitis, Crohn's disease, ankylosing spondylitis, severe or disabling plaque psoriasis",
"Vials of sterile white powder")

Rituxan = Drug("Rituxan", 1, "right", 3, 3, "Treat non-Hodgkin's lymphoma or chronic lymphocytic leukemia",
"10 mg/mL solution for intravenous infusion. 120 mg/mL solution for subcutaneous injection")

Nasonex = Drug("Nasonex", 1, "right", 3, 4, "Treat nasal symptoms of seasonal or year-round allergies", "Nasal sprays")

Humalog = Drug("Humalog", 2, "left", 1, 1,
"Improve blood sugar control in adults and children with diabetes mellitus. Treat type 2 diabetes in adults. Treat type 1 diabetes in adults and children who are at least three years old",
"10 mL vials containing 100 units of insulin lispro for every 1 mL")

Humalog_Kwikpen = Drug("Humalog Kwikpen", 2, "left", 1, 2,"Improve blood sugar control in adults and children with diabetes mellitus. Treat type 2 diabetes in adults. Treat type 1 diabetes in adults and children who are at least three years old",
"Vials of 100 units/mL and 200 units/mL for injection")

Janumet = Drug("Janumet", 2, "left", 1, 3, "Help improve blood sugar control in adults with type 2 diabetes mellitus", "Capsules of 50 mg/500 mg, 50 mg/850 mg, and 50 mg/1000 mg")

Januvia = Drug("Januvia", 2, "left", 1, 4, "Treat type 2 diabetes", "Tablets of 25 mg, 50 mg, and 100 mg")

Lantus = Drug("Lantus", 2, "left", 2, 1, "Improve blood sugar control in adults and children with diabetes mellitus. Treat type 2 diabetes in adults. Treat type 1 diabetes in adults and children who are at least six years old", "Vials of 10 ml")

Lantus_Solostar = Drug("Lantus Solostar", 2, "left", 2, 2, "Improve blood sugar control in adults and children with diabetes mellitus. Treat type 2 diabetes in adults. Treat type 1 diabetes in adults and children who are at least six years old",
"Prefilled pens containing 300 units of insulint each")

Levemir = Drug("Levemir", 2, "left", 2, 3, "Improve blood sugar control in adults and children with diabetes mellitus. Treat type 2 diabetes in adults. Treat type 1 diabetes in adults and children who are at least two years old",
"Solutions for injection of 3 mL and 10 mL")

Novolog = Drug("Novolog", 2, "left", 2, 4, "Improve blood sugar control in adults and children with diabetes mellitus. Treat type 2 diabetes in adults. Treat type 1 diabetes in adults and children who are at least two years old",
"Injectible solution of 100 units/mL")

Novolog_Flexpen = Drug("Novolog Flexpen", 2, "left", 3, 1, "Improve blood sugar control in adults and children with diabetes mellitus. Treat type 2 diabetes in adults. Treat type 1 diabetes in adults and children who are at least two years old", "Prefilled syringe of 100 units/mL")

Victoza = Drug("Victoza", 2, "left", 3, 2, "Help  improve blood sugar control in adults with type 2 diabetes mellitus", "6 mg/mL solution in a pre-filled, multi-dose pen that delivers doses of 0.6 mg, 1.2 mg, or 1.8 mg")

Dexilant = Drug("Dexilant", 2, "left", 3, 3, "Treat heartburn caused by GERD, and to heal damage to the esophagus from stomach acid", "Capsules of 30 mg and 60 mg")

Nexium = Drug("Nexium", 2, "left", 3, 4,
"Treat symptoms of GERD and other conditions involving excessive stomach acid like Zollinger-Ellison syndrome. Promote healing of erosive esophagitis. Prevent gastric ulcer caused by infection with helicobacter pylori, or by the use of nonsteroidal anti-inflammatory drugs",
"Capsules of 5 mg, 10 mg, 20 mg, and 40 mg")

Atripla = Drug("Atripla", 2, "right", 1, 1, "Treat HIV", "Tablets")

Truvada = Drug("Truvada", 2, "right", 1, 2, "Treat HIV", "Tablets")

Reyataz = Drug("Reyataz", 2, "right", 1, 3, "Treat HIV", "Capsules of 150 mg, 200 mg, and 300 mg")

Prezista = Drug("Prezista", 2, "right", 1, 4, "Treat HIV", "Tablets of 75 mg, 150 mg, 400 mg, and 600 mg")

Isentress = Drug("Isentress", 2, "right", 2, 1, "Treat HIV", "Tablets")

Alimta = Drug("Alimta", 2, "right", 2, 2, "Treat non-small cell lung cancer after other cancer medications have been tried without successful treatment", "Vials containing powder for injection of 100 mg, and 400 mg")

Avastin = Drug("Avastin", 2, "right", 2, 3, "Treat a certain type of brain tumor, and certain types of cancers of the kidney, lung, colon, rectum, cervix, ovary, or fallopian tube", "Vials")

Gleevec = Drug("Gleevec", 2, "right", 2, 4, "Treat certain types of leukemia (blood cancer), bone marrow disorders, and skin cancer, or certain tumors of the stomach and digestive system", "Tablets of 100 mg, and 400 mg")

Herceptin = Drug("Herceptin", 2, "right", 3, 1, "Treat certain types of breast cancer or stomach cancer", "Vials")

Zytiga = Drug("Zytiga", 2, "right", 3, 2, "Treat prostate cancer that has spread to other parts of the body", "Tablets of 250 mg")

Sensipar = Drug("Sensipar", 2, "right", 3, 3,
"Treat hyperparathyroidism in people who are on long-term dialysis for kidney disease. Treat hypercalcemia in people with cancer of the parathyroid gland, and in people with overactive parathyroid glands that cannot be treated surgically",
"Tablets of 30 mg, 60 mg, and 90 mg")

Synthroid = Drug("Synthroid", 2, "right", 3, 4, "Treat hypothyroidism. Treat or prevent goiter", "Tablets of 25 µg, 50 µg, 75 µg, 100 µg, 125 µg, 150 µg, 175 µg, and 200 µg")

Avonex = Drug("Avonex", 3, "left", 1, 1, "Treat relapsing multiple sclerosis", "Prefilled syringes of sterile liquid")

Avonex_Pen = Drug("Avonex Pen", 3, "left", 1, 2, "Treat relapsing multiple sclerosis", "Prefilled single-use autoinjectors of sterile liquid")

Copaxone = Drug("Copaxone", 3, "left", 1, 3, "Treat multiple sclerosis and prevent its relapse", "1.0 mL prefilled syringes")

Gilenya = Drug("Gilenya", 3, "left", 1, 4, "Treat relapsing multiple sclerosis in adults", "Capsules")

Humira = Drug("Humira", 3, "left", 2, 1, "Reduce the signs and symptoms of moderately to severely active rheumatoid arthritis, polyarticular juvenile idiopathic arthritis, psoriatic arthritis, ankylosing spondylitis, plaque psoriasis, and hidradenitis suppurativa. Reduce the signs and symptoms of moderately to severely active Crohn's disease, or moderately to severely active ulcerative colitis, after other drugs have been tried without successful treatment. Treat non-infectious intermediate, posterior and panuveitis in adults", 
"Pre-filled syringes, and pre-filled pens")

Orencia = Drug("Orencia", 3, "left", 2, 2, "Treat the symptoms of rheumatoid arthritis, and prevent joint damage caused by these conditions. Treat active Psoriatic Arthritis in adults", "125 mg/mL pre-filled syringes, and 250 mg/vial")

Evista = Drug("Evista", 3, "left", 2, 3, "Treat or prevent osteoporosis in postmenopausal women. Reduce the risk of invasive breast cancer in postmenopausal women who have osteoporosis or who are at risk of invasive breast cancer", "Tablets")

Xgeva = Drug("Xgeva", 3, "left", 2, 4, "Prevent bone fractures and other skeletal conditions in people with tumors that have spread to the bone. Treat giant cell bone tumor in adults and teenagers with fully matured bone structure. Treat high blood levels of calcium caused by cancer, when other medicines  have been used without success", "120 mg/1.7 mL (70 mg/mL) single-use via")

Stelara = Drug("Stelara", 3, "left", 3, 1, "Treat plaque psoriasis or psoriatic arthritis in adults. Treat moderate to severe Crohn's disease after other medicines have been tried without success",
"Pre-filled syringes")

Tecfidera = Drug("Tecfidera", 3, "left", 3, 2, "Treat relapsing multiple sclerosis", "Capsules of 120 mg, and 240 mg")

Oxycontin = Drug("Oxycontin", 3, "left", 3, 3, "Treat moderate to severe pain that is expected to last for an extended period of time", "Tablets of 10 mg, 20 mg, 40 mg, 80 mg, and 160 mg")

Sovaldi = Drug("Sovaldi", 3, "left", 3, 4, "Help treat hepatitis C in adults and children 12 years and older", "Tablets of 400 mg")

Cialis = Drug("Cialis", 3, "right", 1, 1, "Treat erectile dysfunction and symptoms of benign prostatic hypertrophy", "Tablets of 2.5 mg, 5 mg, 10 mg, and 20 mg")

Viagra = Drug("Viagra", 3, "right", 1, 2, "Treat erectile dysfunction in men", "Tablets of 25 mg, 50 mg, and 100 mg")

Crestor = Drug("Crestor", 3, "right", 1, 3, "Lower cholesterol and triglycerides in the blood, and slow the build-up of plaque in blood vessels. Lower the risk of stroke, heart attack, and other heart complications in certain people with diabetes, coronary heart disease, or other risk factors. Treat hereditary forms of high cholesterol, including the heterozygous type and the homozygous type",
"Tablets of 5 mg, 10 mg, 20 mg, and 40 mg")

Vytorin = Drug("Vytorin", 3, "right", 1, 4, "Help lower total cholesterol in adults and children who are at least ten years old", "Tablets of 10 mg, 20 mg, 40 mg, and 80 mg")

Zetia = Drug("Zetia", 3, "right", 2, 1, "Treat high cholesterol", "Tablets of 10 mg")

Renvela = Drug("Renvela", 3, "right", 2, 2, "Control phosphorus levels in people with chronic kidney disease who are on dialysis", "Tablets")

Vesicare = Drug("Vesicare", 3, "right", 2, 3, "Treat symptoms of overactive bladder", "Tablets of 5 mg and 10 mg")

Lucentis = Drug("Lucentis", 3, "right", 2, 4, "Treat the 'wet form' of age-related macular degeneration Treat swelling in the retina caused by diabetes or by a blockage in the blood vessels",
"Single use vials of 0.23 mL aqueous solution for injection. Pre-filled syringe of 0.165 mL aqueous solution for injection")

Celebrex = Drug("Celebrex", 3, "right", 3, 1, "Treat pain or inflammation caused by arthritis, ankylosing spondylitis, and menstrual pain. Treat juvenile rheumatoid arthritis in children who are at least two years old. Treat hereditary polyps in the colon", "Capsules of 100 mg and 200 mg")

Prevnar_13 = Drug("Prevnar 13", 3, "right", 3, 2, "Prevent infection caused by pneumococcal bacteria", "0.5 mL suspension for intramuscular injection")

Suboxone = Drug("Suboxone", 3, "right", 3, 3, "Treat narcotic (opiate) addiction", "Tablets of 2 mg/ 0.5 mg and 8 mg/ 2 mg")

Xolair = Drug("Xolair", 3, "right", 3, 4, "Treat moderate to severe asthma caused by allergies in adults and children who are at least six years old. Treat chronic hives in adults and children who are at least twelve years old, if treatment with antihistamines has been unsuccessful", "Vial of sterile")



from tkinter import *        # Instead of having to type tkinter.SOMETHING every time 
from tkinter.font import Font
from tkinter import ttk      # We need this to make a Treeview widget


tree_columns = ("Drug", "Aisle", "Side", "Column", "Row", "Medical Uses", "Forms")   # The titles of each column in the Treeview

# The date (use the class Drugs) ...
drugs_data = [
    (Advair_Diskus.get_name(), Advair_Diskus.get_aisle(), Advair_Diskus.get_side(), Advair_Diskus.get_column(), Advair_Diskus.get_row(), Advair_Diskus.get_medical_uses(), Advair_Diskus.get_forms()),
    (Flovent_HFA.get_name(), Flovent_HFA.get_aisle(), Flovent_HFA.get_side(), Flovent_HFA.get_column(), Flovent_HFA.get_row(), Flovent_HFA.get_medical_uses(), Flovent_HFA.get_forms()),
    (Symbicort.get_name(), Symbicort.get_aisle(), Symbicort.get_side(), Symbicort.get_column(), Symbicort.get_row(), Symbicort.get_medical_uses(), Symbicort.get_forms()),
    ("Spiriva Handihaler", 1, "left", 1, 4, "Treat symptoms of COPD, including bronchitis and emphysema", "Capsules"),
    ("Benicar", 1, "left", 2, 1, "Treat hypertension (high blood pressure) in adults and children who are at least six years old", "Tablets of 5 mg, 20 mg, and 40 mg"),
    (Diovan.get_name(), Diovan.get_aisle(), Diovan.get_side(), Diovan.get_column(), Diovan.get_row(), Diovan.get_medical_uses(), Diovan.get_forms()),
    (Epogen.get_name(), Epogen.get_aisle(), Epogen.get_side(), Epogen.get_column(), Epogen.get_row(), Epogen.get_medical_uses(), Epogen.get_forms()),
    (Neulasta.get_name(), Neulasta.get_aisle(), Neulasta.get_side(), Neulasta.get_column(), Neulasta.get_row(), Neulasta.get_medical_uses(), Neulasta.get_forms()),
    (Neupogen.get_name(), Neupogen.get_aisle(), Neupogen.get_side(), Neupogen.get_column(), Neupogen.get_row(), Neupogen.get_medical_uses(), Neupogen.get_forms()),
    (Procrit.get_name(), Procrit.get_aisle(), Procrit.get_side(), Procrit.get_column(), Procrit.get_row(), Procrit.get_medical_uses(), Procrit.get_forms()),
    (Pradaxa.get_name(), Pradaxa.get_aisle(), Pradaxa.get_side(), Pradaxa.get_column(), Pradaxa.get_row(), Pradaxa.get_medical_uses(), Pradaxa.get_forms()),
    (Xarelto.get_name(), Xarelto.get_aisle(), Xarelto.get_side(), Xarelto.get_column(), Xarelto.get_row(), Xarelto.get_medical_uses(), Xarelto.get_forms()),
    (Abilify.get_name(), Abilify.get_aisle(), Abilify.get_side(), Abilify.get_column(), Abilify.get_row(), Abilify.get_medical_uses(), Abilify.get_forms()),
    (Cymbalta.get_name(), Cymbalta.get_aisle(), Cymbalta.get_side(), Cymbalta.get_column(), Cymbalta.get_row(), Cymbalta.get_medical_uses(), Cymbalta.get_forms()),
    (Invega_Sustenna.get_name(), Invega_Sustenna.get_aisle(), Invega_Sustenna.get_side(), Invega_Sustenna.get_column(), Invega_Sustenna.get_row(), Invega_Sustenna.get_medical_uses(), Invega_Sustenna.get_forms()),
    (Lunesta.get_name(), Lunesta.get_aisle(), Lunesta.get_side(), Lunesta.get_column(), Lunesta.get_row(), Lunesta.get_medical_uses(), Lunesta.get_forms()),
    (Lyrica.get_name(), Lyrica.get_aisle(), Lyrica.get_side(), Lyrica.get_column(), Lyrica.get_row(), Lyrica.get_medical_uses(), Lyrica.get_forms()),
    (Namenda.get_name(), Namenda.get_aisle(), Namenda.get_side(), Namenda.get_column(), Namenda.get_row(), Namenda.get_medical_uses(), Namenda.get_forms()),
    (Seroquel_XR.get_name(), Seroquel_XR.get_aisle(), Seroquel_XR.get_side(), Seroquel_XR.get_column(), Seroquel_XR.get_row(), Seroquel_XR.get_medical_uses(), Seroquel_XR.get_forms()),
    (Vyvanse.get_name(), Vyvanse.get_aisle(), Vyvanse.get_side(), Vyvanse.get_column(), Vyvanse.get_row(), Vyvanse.get_medical_uses(), Vyvanse.get_forms()),
    (Enbrel.get_name(), Enbrel.get_aisle(), Enbrel.get_side(), Enbrel.get_column(), Enbrel.get_row(), Enbrel.get_medical_uses(), Enbrel.get_forms()),
    (Remicade.get_name(), Remicade.get_aisle(), Remicade.get_side(), Remicade.get_column(), Remicade.get_row(), Remicade.get_medical_uses(), Remicade.get_forms()),
    (Rituxan.get_name(), Rituxan.get_aisle(), Rituxan.get_side(), Rituxan.get_column(), Rituxan.get_row(), Rituxan.get_medical_uses(), Rituxan.get_forms()),
    (Nasonex.get_name(), Nasonex.get_aisle(), Nasonex.get_side(), Nasonex.get_column(), Nasonex.get_row(), Advair_Diskus.get_medical_uses(), Advair_Diskus.get_forms()),
    (Humalog.get_name(), Humalog.get_aisle(), Humalog.get_side(), Humalog.get_column(), Humalog.get_row(), Humalog.get_medical_uses(), Humalog.get_forms()),
    (Humalog_Kwikpen.get_name(), Humalog_Kwikpen.get_aisle(), Humalog_Kwikpen.get_side(), Humalog_Kwikpen.get_column(), Humalog_Kwikpen.get_row(), Humalog_Kwikpen.get_medical_uses(), Humalog_Kwikpen.get_forms()),
    (Janumet.get_name(), Janumet.get_aisle(), Janumet.get_side(), Janumet.get_column(), Janumet.get_row(), Janumet.get_medical_uses(), Janumet.get_forms()),
    (Januvia.get_name(), Januvia.get_aisle(), Januvia.get_side(), Januvia.get_column(), Januvia.get_row(), Januvia.get_medical_uses(), Januvia.get_forms()),
    (Lantus.get_name(), Lantus.get_aisle(),Lantus.get_side(), Lantus.get_column(), Lantus.get_row(), Lantus.get_medical_uses(), Lantus.get_forms()),
    (Lantus_Solostar.get_name(), Lantus_Solostar.get_aisle(), Lantus_Solostar.get_side(), Lantus_Solostar.get_column(), Lantus_Solostar.get_row(), Lantus_Solostar.get_medical_uses(), Lantus_Solostar.get_forms()),
    (Levemir.get_name(), Levemir.get_aisle(), Levemir.get_side(), Levemir.get_column(), Levemir.get_row(), Levemir.get_medical_uses(), Levemir.get_forms()),
    (Novolog.get_name(), Novolog.get_aisle(), Novolog.get_side(), Novolog.get_column(), Novolog.get_row(), Novolog.get_medical_uses(), Novolog.get_forms()),
    (Novolog_Flexpen.get_name(), Novolog_Flexpen.get_aisle(), Novolog_Flexpen.get_side(), Novolog_Flexpen.get_column(), Novolog_Flexpen.get_row(), Novolog_Flexpen.get_medical_uses(), Novolog_Flexpen.get_forms()),
    (Victoza.get_name(), Victoza.get_aisle(), Victoza.get_side(), Victoza.get_column(), Victoza.get_row(), Victoza.get_medical_uses(), Victoza.get_forms()),
    (Dexilant.get_name(), Dexilant.get_aisle(), Dexilant.get_side(), Dexilant.get_column(), Dexilant.get_row(), Dexilant.get_medical_uses(), Dexilant.get_forms()),
    (Nexium.get_name(), Nexium.get_aisle(), Nexium.get_side(), Nexium.get_column(), Nexium.get_row(), Nexium.get_medical_uses(), Nexium.get_forms()),
    (Atripla.get_name(), Atripla.get_aisle(), Atripla.get_side(), Atripla.get_column(), Atripla.get_row(), Atripla.get_medical_uses(), Atripla.get_forms()),
    (Truvada.get_name(), Truvada.get_aisle(), Truvada.get_side(), Truvada.get_column(), Truvada.get_row(), Truvada.get_medical_uses(), Truvada.get_forms()),
    (Reyataz.get_name(), Reyataz.get_aisle(), Reyataz.get_side(), Reyataz.get_column(), Reyataz.get_row(), Reyataz.get_medical_uses(), Reyataz.get_forms()),
    (Prezista.get_name(), Prezista.get_aisle(), Prezista.get_side(), Prezista.get_column(), Prezista.get_row(), Prezista.get_medical_uses(), Prezista.get_forms()),
    (Isentress.get_name(), Isentress.get_aisle(), Isentress.get_side(), Isentress.get_column(), Isentress.get_row(), Isentress.get_medical_uses(), Isentress.get_forms()),
    (Alimta.get_name(), Alimta.get_aisle(), Alimta.get_side(), Alimta.get_column(), Alimta.get_row(), Alimta.get_medical_uses(), Alimta.get_forms()),
    (Avastin.get_name(), Avastin.get_aisle(), Avastin.get_side(), Avastin.get_column(), Avastin.get_row(), Avastin.get_medical_uses(), Avastin.get_forms()),
    (Gleevec.get_name(), Gleevec.get_aisle(),Gleevec.get_side(), Gleevec.get_column(), Gleevec.get_row(), Gleevec.get_medical_uses(), Gleevec.get_forms()),
    (Herceptin.get_name(), Herceptin.get_aisle(), Herceptin.get_side(), Herceptin.get_column(), Herceptin.get_row(), Herceptin.get_medical_uses(), Herceptin.get_forms()),
    (Zytiga.get_name(), Zytiga.get_aisle(), Zytiga.get_side(), Zytiga.get_column(), Zytiga.get_row(), Zytiga.get_medical_uses(), Zytiga.get_forms()),
    (Sensipar.get_name(), Sensipar.get_aisle(), Sensipar.get_side(), Sensipar.get_column(), Sensipar.get_row(), Sensipar.get_medical_uses(), Sensipar.get_forms()),
    (Synthroid.get_name(), Synthroid.get_aisle(), Synthroid.get_side(), Synthroid.get_column(), Synthroid.get_row(), Synthroid.get_medical_uses(), Synthroid.get_forms()),
    (Avonex.get_name(), Avonex.get_aisle(), Avonex.get_side(), Avonex.get_column(), Avonex.get_row(), Avonex.get_medical_uses(), Advair_Diskus.get_forms()),
    (Avonex_Pen.get_name(), Avonex_Pen.get_aisle(), Avonex_Pen.get_side(), Avonex_Pen.get_column(), Avonex_Pen.get_row(), Avonex_Pen.get_medical_uses(), Avonex_Pen.get_forms()),
    (Copaxone.get_name(), Copaxone.get_aisle(), Copaxone.get_side(), Copaxone.get_column(), Copaxone.get_row(), Copaxone.get_medical_uses(), Copaxone.get_forms()),
    (Gilenya.get_name(), Gilenya.get_aisle(), Gilenya.get_side(), Gilenya.get_column(), Gilenya.get_row(), Gilenya.get_medical_uses(), Gilenya.get_forms()),
    (Humira.get_name(), Humira.get_aisle(), Humira.get_side(), Humira.get_column(), Humira.get_row(), Humira.get_medical_uses(), Humira.get_forms()),
    (Orencia.get_name(), Orencia.get_aisle(), Orencia.get_side(), Orencia.get_column(), Orencia.get_row(), Orencia.get_medical_uses(), Orencia.get_forms()),
    (Evista.get_name(), Evista.get_aisle(), Evista.get_side(), Evista.get_column(), Evista.get_row(), Evista.get_medical_uses(), Evista.get_forms()),
    (Xgeva.get_name(), Xgeva.get_aisle(), Xgeva.get_side(), Xgeva.get_column(), Xgeva.get_row(), Xgeva.get_medical_uses(), Xgeva.get_forms()),
    (Stelara.get_name(), Stelara.get_aisle(), Stelara.get_side(), Stelara.get_column(), Stelara.get_row(), Stelara.get_medical_uses(), Stelara.get_forms()),
    (Tecfidera.get_name(), Tecfidera.get_aisle(), Tecfidera.get_side(), Tecfidera.get_column(), Tecfidera.get_row(), Tecfidera.get_medical_uses(), Tecfidera.get_forms()),
    (Oxycontin.get_name(), Oxycontin.get_aisle(), Oxycontin.get_side(), Oxycontin.get_column(), Oxycontin.get_row(), Oxycontin.get_medical_uses(), Oxycontin.get_forms()),
    (Sovaldi.get_name(), Sovaldi.get_aisle(), Sovaldi.get_side(), Sovaldi.get_column(), Sovaldi.get_row(), Sovaldi.get_medical_uses(), Sovaldi.get_forms()),
    (Cialis.get_name(), Cialis.get_aisle(), Cialis.get_side(), Cialis.get_column(), Cialis.get_row(), Cialis.get_medical_uses(), Cialis.get_forms()),
    (Viagra.get_name(), Viagra.get_aisle(), Viagra.get_side(), Viagra.get_column(), Viagra.get_row(), Viagra.get_medical_uses(), Viagra.get_forms()),
    (Crestor.get_name(), Crestor.get_aisle(), Crestor.get_side(),Crestor.get_column(), Crestor.get_row(), Crestor.get_medical_uses(), Crestor.get_forms()),
    (Vytorin.get_name(), Vytorin.get_aisle(), Vytorin.get_side(), Vytorin.get_column(), Vytorin.get_row(), Vytorin.get_medical_uses(), Vytorin.get_forms()),
    (Zetia.get_name(), Zetia.get_aisle(), Zetia.get_side(), Zetia.get_column(), Zetia.get_row(), Zetia.get_medical_uses(), Zetia.get_forms()),
    (Renvela.get_name(), Renvela.get_aisle(), Renvela.get_side(), Renvela.get_column(), Renvela.get_row(), Renvela.get_medical_uses(), Renvela.get_forms()),
    (Vesicare.get_name(), Vesicare.get_aisle(), Vesicare.get_side(), Vesicare.get_column(), Vesicare.get_row(), Vesicare.get_medical_uses(), Vesicare.get_forms()),
    (Lucentis.get_name(), Lucentis.get_aisle(), Lucentis.get_side(), Lucentis.get_column(), Lucentis.get_row(), Lucentis.get_medical_uses(), Lucentis.get_forms()),
    (Celebrex.get_name(), Celebrex.get_aisle(), Celebrex.get_side(), Celebrex.get_column(), Celebrex.get_row(), Celebrex.get_medical_uses(), Celebrex.get_forms()),
    (Prevnar_13.get_name(), Prevnar_13.get_aisle(), Prevnar_13.get_side(), Prevnar_13.get_column(), Prevnar_13.get_row(), Prevnar_13.get_medical_uses(), Prevnar_13.get_forms()),
    (Suboxone.get_name(), Suboxone.get_aisle(), Suboxone.get_side(), Suboxone.get_column(), Suboxone.get_row(), Suboxone.get_medical_uses(), Suboxone.get_forms()),
    (Xolair.get_name(), Xolair.get_aisle(), Xolair.get_side(), Xolair.get_column(), Xolair.get_row(), Xolair.get_medical_uses(), Xolair.get_forms()),
    #(" ", " ", " ", " ", " ", " ", " ")
    ]


# The sorting function (the contents of the Treeview will be sorted according to which column heading is pressed) ...
def sorting_function(tree, COLUMN, DESCENDING_ORDER):
   
    DATA = [(tree.set(child, COLUMN), child) for child in tree.get_children('')]

    # To reorder data ...
    DATA.sort(reverse = DESCENDING_ORDER)
    
    for indx, item in enumerate(DATA):
        tree.move(item[1], '', indx)

    # If a column heading is pressed again, the sorting will occur in the opposite way ...
    tree.heading(COLUMN, command = lambda COLUMN = COLUMN: sorting_function(tree, COLUMN, int(not DESCENDING_ORDER)))
    
# When the program starts, the data will be sorting in ascending order according to the Aisles    
    
    


# To make the Treeview widget ...

class App(Frame):
    
    def __init__(self):        # To initialize
        
        Frame.__init__(self)
        
        self.tree = None
        self.construct_widgets()   # Function will be defined & used later
        self.construct_tree()      # Function will be defined & used later
        
        # To change the colors of the text or background of the Treeview:-
        #ttk.Style().configure("Treeview", background="lavender", foreground="black", fieldbackground="white")
        
    def construct_widgets(self):
        
        container = ttk.Frame()      # Notice the ttk. syntax because we are trying to make a Treeview widget
        container.pack(fill='both', expand=True)

        self.tree = ttk.Treeview(columns = tree_columns, show = "headings")    # The headings of each column of the Treeview widget are: Drug, Aisle, Side, Column, Row, Treatment for, & Forms
       
        # To make vertical and horizontal scrollbars ...
        vertical_scrollbar = ttk.Scrollbar(orient="vertical", command=self.tree.yview)       # yview: scrollbar moves up and down
        horizontal_scrollbar = ttk.Scrollbar(orient="horizontal", command=self.tree.xview)   # xview: scrollbar moves left and right
        self.tree.configure(yscrollcommand = vertical_scrollbar.set, xscrollcommand = horizontal_scrollbar.set)
        self.tree.grid(column = 0, row = 0, sticky = 'nsew', in_ = container)   # Location of Treeview widget cotnaining the data
        
        # Location of the scrollbars ...
        vertical_scrollbar.grid(column = 1, row = 0, sticky = 'ns', in_ = container)
        horizontal_scrollbar.grid(column = 0, row = 1, sticky = 'ew', in_ = container)

        container.grid_columnconfigure(0, weight=1)
        container.grid_rowconfigure(0, weight=1)
               
        
    def construct_tree(self):
        
        for COL in tree_columns:
            self.tree.heading(COL, text = COL.title(), command = lambda c = COL: sorting_function(self.tree, c, 0))
        
        # For the titles of each column ...
        for COL in tree_columns:
            self.tree.heading(COL, text = COL.title())
        
            self.tree.column(COL, width = Font().measure(COL.title()))

        # To inser the data from drugs_data ...
        for item in drugs_data:
            self.tree.insert('', 'end', values = item)

            # Adjust width of columns ...
            for indx, val in enumerate(item):
                ilen = Font().measure(val)
                if self.tree.column(tree_columns[indx], width=None) < ilen:
                    self.tree.column(tree_columns[indx], width=ilen)
                    

def main():
    
    root = Tk()
    root.title("Pharmacy")

    app = App()
    root.mainloop()


if __name__ == "__main__":
    
    main()
    
